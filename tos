#!/bin/bash

# TOS is the Tom OS update script. This script manages everything for maintaining and upgrading.
# To understand how to install the software go to https://github.com/ODEX-TOS/tools
# Archinstall and dialogarchinstall are scripts that install arch from scratch and also install custom software to more personalise the os
# Once you have installed arch and have cloned the helper-scripts into a $PATH file you will have the tool TOS.
# This tool is a wrapper around arch based tools.
# It can install packages from the repo's and AUR. It also aids with ssh, networking, updating, installing software and more.
# It basically wraps multiple commands into one simple to use command.

RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;35m'
ORANGE='\033[1;33m'
NC='\033[0m' # No Color

export SUDO_ASKPASS="/usr/share/tos-rofi/askpass"
name=$(basename "$0")
directory="/usr/share/"
themefile="$HOME/.config/tos/theme"
extended="$directory"tos-helper
export location="$directory"tos-installer
export framework="$location"/framework.sh

function installyay() {
  cd || exit 1
  git clone https://aur.archlinux.org/yay.git
  cd yay || exit 1
  makepkg -si
  cd || exit 1
  rm -rf yay
}

case "$1" in
  "" | "-h" | "--help")
    source "$extended"/help.sh
    ;;
  "c" | "calamares")
    calamares
    ;;
  "-p" | "--profile")
    if [[ "$2" == "" ]]; then
      printf "${RED}Please supply an image as input $NC\n"
      exit 1
    fi
    if [[ "$2" == *".png" ]]; then
      convert "$2" "$USER".jpg
      sudo mv "$USER".jpg "/var/lib/AccountsService/icons/$USER"
    else
      sudo cp "$2" "/var/lib/AccountsService/icons/$USER"
    fi
    # update the cache
    if [[ -f "$HOME/.cache/tos/user-icons/user.jpg" ]]; then
      cp "/var/lib/AccountsService/icons/$USER" "$HOME/.cache/tos/user-icons/user.jpg"
    fi
    ;;
  "is" | "installer-server")
    printf "${RED} This installer is outdated and no longer works${NC}\n"
		printf "${RED} Use ${GREEN}tos calamares${RED} to install tos the correct way${NC}\n"
		exit 1
    tos-cli-installer
    ;;
  "-u" | "--update")
    source "$extended"/update.sh
    ;;
  "-m" | "--mount")
    cryptsetup open "$2"3 "$3"
    mount /dev/mapper/tos-root /mnt
    mount /dev/mapper/tos-home /mnt/home
    if [[ "$4" == "" ]]; then
      mount "$2"1 /mnt/boot/efi
    else
      mount "$2"1 /mnt/boot
    fi
    arch-chroot /mnt

    ;;
  "-S"* | "-R"* | "-Q"*)
    if [ "$(id -u)" != "0" ]; then
      if [[ ! $(command -v yay) ]]; then
        installyay
      fi
      yay "${@:1}"
    else
      printf "${RED}Package management as root is very dangerous$NC\n"
    fi

    ;;
  "-iso")
    source "$extended"/installer.sh
    ;;
  "-c" | "--crypto")
    source "$extended"/etc.sh
    ;;
  "g" | "gpg")
    source "$extended"/gpg.sh
    ;;
  "n" | "network")
    source "$extended"/network.sh
    ;;
  "-rs" | "--repair-system")
    source "$extended"/update.sh
    ;;
  "t" | "theme")
    source "$extended"/theme.sh
    ;;
  "b" | "bluetooth")
    source "$extended"/bluetooth.sh
    ;;
  "v" | "volume")
    source "$extended"/volume.sh
    ;;
  "s" | "screen")
    source "$extended"/screen.sh
    ;;
  "install" | "installer" | "i")
    exec 3>&1
    executable=$(dialog --title "TOS Installer" --backtitle "TOS" --menu "What do you want to install?" 0 0 0 $(/usr/bin/ls "$location"/*.sh | sed 's:^.*framework.sh$::' | xargs -n 1 basename | sed 's:.sh::' | awk '{print $0, "Install"}') 2>&1 1>&3)
    exec 3>&-
    source "$location"/"$executable".sh
    ;;
esac
